
# Analyze what is wrong with the double dice being equal 
# After analyzing it again, what I have found is that the branching doesn't happen if we have gone to a "if statement and moved something" we just move regardless
# There is a stupid version which I thought. Or we can flag that we have gone into the statement and then go from there?
# have to fix the hit version of dices being equal
# implement dices being equal for turn two


# I think only the dices being equal is left and correcting the odds of things like (1,3) and (3,1). The getting of the odds might go to the levels honestly


# There is some 6...23 which seems fucked up
# I figured out the 6...23 it's for checking if we can go out
# Turn 2 is implemented in the debugging process



# A through testing should happen

# Need to put print statements in where we want to add to the set so we can see the outcomes


# The possible scenarios to test: 
turn 1 -> regular
turn 1 -> regular hit
turn 1 -> regulr going out 

turn 1 -> double 
turn 1 -> double hit
turn 1 -> double going out

Same thing for turn 2 for possible sceneraios to test

# what do we need to check for is
1. The generated number of possibilities is correcting
2. Th outcomes doesn't have any possible errors the number of stones add up to 15
3. There are no backward moves from turn 2 because the code is a copy of turn 1


#########################################
##############BUGS FOUND#################
#########################################

1. You can only go out when you can land on -1 or 24 for turn 1 and turn 2 respectively 
So if there are stones on 1 and then there are stones on 4 you need to play 4, right? you can't play 1 and just becauese it's less than 0 we are scoring


- a fix could be check behind in the house if there is anything that could be passed forward then it will be passed forward 
- also when the spot is empty and there is nothing behind then we can only take off with the last spot in the house
- 












#########################################
##############END BUGS FOUND#############
#########################################

                        let mut is_i_the_biggest = 1;
                        for b in (i+1)..=5{
                            if(board_clone[b as usize].0 == 1){
                                is_i_the_biggest = 0;
                            }
                        }
                        if (i - dice.0 < 0 && all_in_zone == 1) && (board_clone[i as usize].0 == 1 || is_i_the_biggest == 1){
                            keep_count_1_clone = keep_count_1_clone - 1;
                            board_clone[i as usize].1 = board_clone[i as usize].1 - 1;
                            if board_clone[i as usize].1 == 0 {
                                board_clone[i as usize].0 = 0
                            }


                        let mut is_i_the_biggest = 1;
                        for b in 18..i{
                            if(board_clone[b as usize].0 == 2){
                                is_i_the_biggest = 0;
                            }
                        }

                         && (board_clone[i as usize].0 == 2 || is_i_the_biggest == 1)



I have some suspicion about only using one order for the dices


The hits in double and going out in turn 1 makes no sense at all